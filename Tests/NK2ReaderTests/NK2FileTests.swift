import XCTest
import MAPI
import WindowsDataTypes
@testable import NK2Reader

final class NK2FileTests: XCTestCase {
    func testSimple() throws {
        do {
            let data = try getData(name: "hughbe_Outlook", fileExtension: "NK2")
            let file = try NK2File(data: data)
            
            XCTAssertEqual(1, file.rows.count)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].emailAddress!)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? ContactAddressEntryID)!.flags)
            XCTAssertEqual(GUID(0x0AAA42FE, 0xC718, 0x101A, 0xE885, 0x0B651C240000), (file.rows[0].entryId as? ContactAddressEntryID)!.providerUid)
            XCTAssertEqual(0x00000003, (file.rows[0].entryId as? ContactAddressEntryID)!.version)
            XCTAssertEqual(0x00000004, (file.rows[0].entryId as? ContactAddressEntryID)!.type)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? ContactAddressEntryID)!.index)
            XCTAssertEqual(0x00000018, (file.rows[0].entryId as? ContactAddressEntryID)!.entryIdCount)
            XCTAssertEqual(0x00000000, ((file.rows[0].entryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.flags)
            XCTAssertEqual(GUID(0x3F8F317C, 0xF3FC, 0x4F83, 0xB657, 0x337775D8BDBE), ((file.rows[0].entryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0xA4, 0x00, 0x20, 0x00], ((file.rows[0].entryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.providerData)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xFE, 0x42, 0xAA, 0x0A, 0x18, 0xC7, 0x1A, 0x10, 0xE8, 0x85, 0x0B, 0x65, 0x1C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x70, 0x00, 0x81, 0x47, 0xAB, 0xAC, 0xD6, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xA4, 0x00, 0x48, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x20, 0x00, 0x42, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x6D, 0x00, 0x79, 0x00, 0x00, 0x00], [UInt8](file.rows[0].instanceKey!))
            XCTAssertEqual("Hugh Bellamy", file.rows[0].normalizedSubject!)
            XCTAssertEqual("Hugh Bellamy (hughbellars@gmail.com)", file.rows[0].displayName!)
            XCTAssertTrue(file.rows[0].newNickName!)
            XCTAssertEqual("Hugh Bellamy (hughbellars@gmail.com)", file.rows[0].dropDownDisplayName)
            XCTAssertEqual("SMTP", file.rows[0].addressType!)
            XCTAssertEqual("Hugh Bellamy", file.rows[0].recipientDisplayName!)
            XCTAssertEqual(.mailUser, file.rows[0].displayType!)
            XCTAssertEqual(.none, file.rows[0].recipientTrackStatus!)
            XCTAssertEqual(0xA000, file.rows[0].nickNameWeight)
            XCTAssertEqual(.primaryRecipient, file.rows[0].recipientType!)
            XCTAssertEqual(.mailUser, file.rows[0].objectType!)
            XCTAssertEqual([.sendable], file.rows[0].recipientFlags)
            XCTAssertEqual(0x00000000, file.rows[0].recipientResourceState)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].nickName)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].originalDisplayName!)
            XCTAssertEqual(0, file.rows[0].recipientOrder!)
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.flags)
            XCTAssertEqual(GUID(0x0AAA42FE, 0xC718, 0x101A, 0xE885, 0x0B651C240000), (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.providerUid)
            XCTAssertEqual(0x00000003, (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.version)
            XCTAssertEqual(0x00000004, (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.type)
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.index)
            XCTAssertEqual(0x00000018, (file.rows[0].recipientEntryId as? ContactAddressEntryID)!.entryIdCount)
            XCTAssertEqual(0x00000000, ((file.rows[0].recipientEntryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.flags)
            XCTAssertEqual(GUID(0x3F8F317C, 0xF3FC, 0x4F83, 0xB657, 0x337775D8BDBE), ((file.rows[0].recipientEntryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0xA4, 0x00, 0x20, 0x0], ((file.rows[0].recipientEntryId as? ContactAddressEntryID)!.entryIdBytes as? GeneralEntryID)!.providerData)
        }
    }

    func testRecent() throws {
        do {
            let data = try getData(name: "Stream_Autocomplete_0_C46AC97B9CA2EF4197BE00D129BCCA43", fileExtension: "dat")
            let file = try NK2File(data: data)

            XCTAssertEqual(2, file.rows.count)
            XCTAssertEqual(0x00000000, file.rows[0].recipientResourceState)
            XCTAssertNil(file.rows[0].account)
            XCTAssertFalse(file.rows[0].sendRichInfo!)
            XCTAssertEqual(.none, file.rows[0].recipientTrackStatus!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].recipientDisplayName!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x48, 0x55, 0x47, 0x48, 0x42, 0x45, 0x4C, 0x4C, 0x41, 0x52, 0x53, 0x40, 0x47, 0x4D, 0x41, 0x49, 0x4C, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[0].searchKey!))
            XCTAssertFalse(file.rows[0].newNickName!)
            XCTAssertNil(file.rows[0].smtpAddress)
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[0].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0x4000, file.rows[0].nickNameWeight)
            XCTAssertEqual([.sendable], file.rows[0].recipientFlags)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].displayName!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].emailAddress!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].nickName)
            XCTAssertEqual(0, file.rows[0].recipientOrder!)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[0].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual("SMTP", file.rows[0].addressType!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x68, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x62, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x72, 0x00, 0x73, 0x00, 0x40, 0x00, 0x67, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x68, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x62, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x72, 0x00, 0x73, 0x00, 0x40, 0x00, 0x67, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[0].recordKey!))
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].dropDownDisplayName)
            XCTAssertEqual(.mailUser, file.rows[0].displayType!)
            XCTAssertEqual(0, file.rows[0].sendInternetEncoding!)
            XCTAssertEqual(.mailUser, file.rows[0].objectType!)
            XCTAssertEqual(.primaryRecipient, file.rows[0].recipientType!)

            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x62, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x6D, 0x00, 0x79, 0x00, 0x2E, 0x00, 0x68, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x64, 0x00, 0x40, 0x00, 0x67, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x62, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x6D, 0x00, 0x79, 0x00, 0x2E, 0x00, 0x68, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x64, 0x00, 0x40, 0x00, 0x67, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[1].recordKey!))
            XCTAssertEqual(0x00000000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[1].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("bellamy.hughd@gmail.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("bellamy.hughd@gmail.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual("bellamy.hughd@gmail.com", file.rows[1].dropDownDisplayName)
            XCTAssertEqual("SMTP", file.rows[1].addressType!)
            XCTAssertEqual("bellamy.hughd@gmail.com", file.rows[1].emailAddress!)
            XCTAssertEqual(0, file.rows[1].sendInternetEncoding!)
            XCTAssertEqual(.mailUser, file.rows[1].displayType!)
            XCTAssertFalse(file.rows[1].newNickName!)
            XCTAssertEqual("bellamy.hughd@gmail.com", file.rows[1].nickName)
            XCTAssertEqual("bellamy.hughd@gmail.com", file.rows[1].displayName!)
            XCTAssertEqual(0x00000000, file.rows[1].recipientResourceState)
            XCTAssertEqual(0x00000000, (file.rows[1].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[1].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("bellamy.hughd@gmail.com", (file.rows[1].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("bellamy.hughd@gmail.com", (file.rows[1].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.ccRecipient, file.rows[1].recipientType!)
            XCTAssertEqual(0x3800, file.rows[1].nickNameWeight)
            XCTAssertEqual(.none, file.rows[1].recipientTrackStatus!)
            XCTAssertNil(file.rows[1].account)
            XCTAssertFalse(file.rows[1].sendRichInfo!)
            XCTAssertEqual([.sendable], file.rows[1].recipientFlags)
            XCTAssertEqual(.mailUser, file.rows[1].objectType!)
            XCTAssertNil(file.rows[1].smtpAddress)
            XCTAssertEqual(1, file.rows[1].recipientOrder!)
            XCTAssertEqual("bellamy.hughd@gmail.com", file.rows[1].recipientDisplayName!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x42, 0x45, 0x4C, 0x4C, 0x41, 0x4D, 0x59, 0x2E, 0x48, 0x55, 0x47, 0x48, 0x44, 0x40, 0x47, 0x4D, 0x41, 0x49, 0x4C, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[1].searchKey!))
        }
        do {
            let data = try getData(name: "Stream_Autocomplete_0_DFE96F3C294B9243A8156DAF9CF76306", fileExtension: "dat")
            let file = try NK2File(data: data)
            
            XCTAssertEqual(3, file.rows.count)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[0].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.none, file.rows[0].recipientTrackStatus!)
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.unicode], (file.rows[0].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("hughbellars@gmail.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.mailUser, file.rows[0].displayType!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].nickName)
            XCTAssertEqual(0x00000000, file.rows[0].recipientResourceState)
            XCTAssertEqual([GUID(0x00000000, 0x0000, 0x0000, 0x0000, 0x000000000000)], file.rows[0].abProviders!)
            XCTAssertEqual([.sendable, RecipientFlags(rawValue: 0x00000200)], file.rows[0].recipientFlags)
            XCTAssertNil(file.rows[0].account)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].dropDownDisplayName)
            XCTAssertEqual(1, file.rows[0].recipientOrder!)
            XCTAssertEqual(0xD000, file.rows[0].nickNameWeight)
            XCTAssertNil(file.rows[0].smtpAddress)
            XCTAssertEqual(.mailUser, file.rows[0].objectType!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].recipientDisplayName!)
            XCTAssertFalse(file.rows[0].newNickName!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].emailAddress!)
            XCTAssertEqual(.primaryRecipient, file.rows[0].recipientType!)
            XCTAssertEqual("hughbellars@gmail.com", file.rows[0].displayName!)
            XCTAssertEqual("SMTP", file.rows[0].addressType!)

            XCTAssertEqual("pstreadertests@outlook.com", file.rows[1].smtpAddress!)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[1].displayName!)
            XCTAssertNil(file.rows[1].getProperty(id: .unknown0x0000)!)
            XCTAssertEqual(0x00000000, file.rows[1].recipientResourceState)
            XCTAssertEqual(.bccRecipient, file.rows[1].recipientType!)
            XCTAssertEqual("EX", file.rows[1].addressType!)
            XCTAssertEqual(0x4000, file.rows[1].nickNameWeight)
            XCTAssertEqual(0x00000000, (file.rows[1].entryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(GUID(0xC840A7DC, 0x42C0, 0x1A10, 0xB4B9, 0x08002B2FE182), (file.rows[1].entryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (file.rows[1].entryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (file.rows[1].entryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", (file.rows[1].entryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual([GUID(0x00000000, 0x0000, 0x0000, 0x0000, 0x000000000000)], file.rows[1].abProviders!)
            XCTAssertEqual(.mailUser, file.rows[1].displayType!)
            XCTAssertEqual(0x00000000, (file.rows[1].recipientEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(GUID(0xC840A7DC, 0x42C0, 0x1A10, 0xB4B9, 0x08002B2FE182), (file.rows[1].recipientEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (file.rows[1].recipientEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (file.rows[1].recipientEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", (file.rows[1].recipientEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[1].nickName)
            XCTAssertEqual("Room", file.rows[1].recipientDisplayName!)
            XCTAssertFalse(file.rows[1].newNickName!)
            XCTAssertEqual(.mailUser, file.rows[1].objectType!)
            XCTAssertEqual([DisplayTypeEx(rawValue: 0x40000000)], file.rows[1].displayTypeEx)
            XCTAssertEqual(2, file.rows[1].recipientOrder!)
            XCTAssertEqual("pstreadertests@outlook.com <pstreadertests@outlook.com>", file.rows[1].dropDownDisplayName)
            XCTAssertEqual([.sendable, RecipientFlags(rawValue: 0x00000200)], file.rows[1].recipientFlags)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", file.rows[1].emailAddress!)
            XCTAssertEqual(.none, file.rows[1].recipientTrackStatus!)
            XCTAssertEqual("user1", file.rows[1].account!)

            XCTAssertEqual("pstreadertests@outlook.com", file.rows[2].recipientDisplayName!)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[2].nickName)
            XCTAssertNil(file.rows[2].account)
            XCTAssertEqual(.mailUser, file.rows[2].displayType!)
            XCTAssertEqual(.primaryRecipient, file.rows[2].recipientType!)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[2].displayName!)
            XCTAssertEqual(0x00000000, (file.rows[2].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[2].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[2].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[2].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("pstreadertests@outlook.com", (file.rows[2].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[2].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("pstreadertests@outlook.com", (file.rows[2].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertFalse(file.rows[2].newNickName!)
            XCTAssertEqual(.none, file.rows[2].recipientTrackStatus!)
            XCTAssertEqual(.mailUser, file.rows[2].objectType!)
            XCTAssertEqual(0x00000000, (file.rows[2].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[2].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[2].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[2].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("pstreadertests@outlook.com", (file.rows[2].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[2].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("pstreadertests@outlook.com", (file.rows[2].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x70, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x65, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x65, 0x00, 0x73, 0x00, 0x74, 0x00, 0x73, 0x00, 0x40, 0x00, 0x6F, 0x00, 0x75, 0x00, 0x74, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x70, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x65, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x65, 0x00, 0x73, 0x00, 0x74, 0x00, 0x73, 0x00, 0x40, 0x00, 0x6F, 0x00, 0x75, 0x00, 0x74, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[2].recordKey!))
            XCTAssertFalse(file.rows[2].sendRichInfo!)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[2].emailAddress!)
            XCTAssertEqual("SMTP", file.rows[2].addressType!)
            XCTAssertEqual(0, file.rows[2].recipientOrder!)
            XCTAssertEqual("pstreadertests@outlook.com", file.rows[2].dropDownDisplayName)
            XCTAssertEqual(0x1800, file.rows[2].nickNameWeight)
            XCTAssertEqual(0x00000000, file.rows[2].recipientResourceState)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x54, 0x45, 0x53, 0x54, 0x53, 0x40, 0x4F, 0x55, 0x54, 0x4C, 0x4F, 0x4F, 0x4B, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[2].searchKey!))
            XCTAssertNil(file.rows[2].smtpAddress)
            XCTAssertEqual(0, file.rows[2].sendInternetEncoding!)
            XCTAssertEqual([.sendable], file.rows[2].recipientFlags)
        }
    }
    
    func testExample() throws {
        do {
            let data = Data([
                0x0D, 0xF0, 0xAD, 0xBA, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
                0x17, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x01, 0x60, 0x90, 0xFD, 0x13, 0x00, 0x80, 0x1A, 0xE3, 0x04,
                0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00,
                0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00,
                0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00,
                0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0x15, 0x0C, 0x69, 0x00, 0x74, 0x00, 0x01, 0x00, 0x00, 0x00,
                0x63, 0x00, 0x6F, 0x00, 0x0A, 0x00, 0xFE, 0x39, 0x69, 0x00, 0x61, 0x00, 0x0F, 0x01, 0x04, 0x80,
                0x65, 0x00, 0x43, 0x00, 0x0A, 0x00, 0x00, 0x3A, 0x2D, 0x00, 0x31, 0x00, 0x0F, 0x01, 0x04, 0x80,
                0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x71, 0x3A, 0x40, 0x32, 0x1A, 0x39, 0x00, 0x00, 0x00, 0x00,
                0xF4, 0xFC, 0x5F, 0x03, 0x0B, 0x00, 0x40, 0x3A, 0x90, 0x1E, 0x1C, 0x02, 0x00, 0x00, 0x00, 0x00,
                0xD0, 0xFC, 0x5F, 0x03, 0x03, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x90, 0x1E, 0x1C, 0x02, 0x02, 0x01, 0x0B, 0x30, 0xCD, 0xA2, 0x60, 0x32, 0x1B, 0x00, 0x00, 0x00,
                0xAC, 0x1A, 0xE3, 0x04, 0x1B, 0x00, 0x00, 0x00, 0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4A, 0x41, 0x4E,
                0x45, 0x53, 0x4D, 0x49, 0x54, 0x48, 0x40, 0x43, 0x4F, 0x4E, 0x54, 0x4F, 0x53, 0x4F, 0x2E, 0x4F,
                0x52, 0x47, 0x00, 0x02, 0x01, 0xF9, 0x0F, 0x80, 0x06, 0xAC, 0x00, 0x7A, 0x00, 0x00, 0x00, 0xC7,
                0x1A, 0xE3, 0x04, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE,
                0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A,
                0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68,
                0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F,
                0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54,
                0x00, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D,
                0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74,
                0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00,
                0x00, 0x02, 0x01, 0xFF, 0x0F, 0x76, 0x05, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0x41, 0x1B, 0xE3,
                0x04, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10,
                0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x61,
                0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40,
                0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E,
                0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50,
                0x00, 0x00, 0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69,
                0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F,
                0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x03,
                0x00, 0xFE, 0x0F, 0x94, 0xFC, 0x5F, 0x03, 0x06, 0x00, 0x00, 0x00, 0x30, 0x70, 0x22, 0x07, 0x1F,
                0x00, 0x03, 0x30, 0x2A, 0xAE, 0x60, 0x32, 0xBB, 0x1B, 0xE3, 0x04, 0x3C, 0x31, 0xAC, 0x00, 0x2C,
                0x00, 0x00, 0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69,
                0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F,
                0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x1F,
                0x00, 0x02, 0x30, 0x3C, 0x31, 0xAC, 0x00, 0xE7, 0x1B, 0xE3, 0x04, 0x7C, 0xFC, 0x5F, 0x03, 0x0A,
                0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x01,
                0x30, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x1B, 0xE3, 0x04, 0xFF, 0xFF, 0x00, 0x00, 0x2C, 0x00, 0x00,
                0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74,
                0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73,
                0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0xFF,
                0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xDE,
                0x5F, 0x4F, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xFD,
                0x5F, 0x41, 0x00, 0x64, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0xF6,
                0x5F, 0x42, 0x00, 0x6F, 0x00, 0x1D, 0x1C, 0xE3, 0x04, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00,
                0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74,
                0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73,
                0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x02, 0x01, 0xF7,
                0x5F, 0xAA, 0x0A, 0x18, 0xC7, 0x7A, 0x00, 0x00, 0x00, 0x49, 0x1C, 0xE3, 0x04, 0x7A, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00,
                0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65,
                0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F,
                0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72,
                0x00, 0x67, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6A,
                0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68,
                0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F,
                0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0xDF, 0x5F, 0x80,
                0x19, 0x44, 0x04, 0x00, 0x00, 0x00, 0x00, 0x58, 0xFD, 0x13, 0x00, 0x0B, 0x00, 0x02, 0x60, 0x90,
                0xFD, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x03, 0x60, 0x30,
                0xCF, 0x02, 0x05, 0xC3, 0x1C, 0xE3, 0x04, 0x16, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x6A,
                0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68,
                0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F,
                0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x60, 0xC7,
                0x44, 0x10, 0x30, 0x00, 0x40, 0x00, 0x00, 0xE9, 0xFF, 0xFF, 0x7F, 0x17, 0x00, 0x00, 0x00, 0x1F,
                0x00, 0x01, 0x60, 0x90, 0xFD, 0x13, 0x00, 0x38, 0xF4, 0xE2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x28,
                0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65,
                0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F,
                0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x03, 0x00, 0x15, 0x0C, 0x03,
                0x00, 0x03, 0x36, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x13, 0x36, 0x0A, 0x00, 0xFE, 0x39, 0x00,
                0x00, 0x00, 0x00, 0x0F, 0x01, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x3A, 0x6E,
                0xBF, 0xEF, 0x38, 0x0F, 0x01, 0x04, 0x80, 0xC4, 0xEB, 0xEF, 0x38, 0x03, 0x00, 0x71, 0x3A, 0x40,
                0x32, 0x1A, 0x39, 0x00, 0x00, 0x00, 0x00, 0xF4, 0xFC, 0x2B, 0x06, 0x0B, 0x00, 0x40, 0x3A, 0x90,
                0x1E, 0x1C, 0x02, 0x00, 0x00, 0x00, 0x00, 0xD0, 0xFC, 0x2B, 0x06, 0x03, 0x00, 0x00, 0x39, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x1E, 0x1C, 0x02, 0x02, 0x01, 0x0B, 0x30, 0xCD,
                0xA2, 0x60, 0x32, 0x19, 0x00, 0x00, 0x00, 0x60, 0xF4, 0xE2, 0x04, 0x19, 0x00, 0x00, 0x00, 0x53,
                0x4D, 0x54, 0x50, 0x3A, 0x4A, 0x4F, 0x48, 0x4E, 0x44, 0x4F, 0x45, 0x40, 0x43, 0x4F, 0x4E, 0x54,
                0x4F, 0x53, 0x4F, 0x2E, 0x43, 0x4F, 0x4D, 0x00, 0x02, 0x01, 0xF9, 0x0F, 0x80, 0x06, 0xAC, 0x00,
                0x72, 0x00, 0x00, 0x00, 0x79, 0xF4, 0xE2, 0x04, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02,
                0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00,
                0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00,
                0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00,
                0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00,
                0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00,
                0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x02, 0x01,
                0xFF, 0x0F, 0x0E, 0x05, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0xEB, 0xF4, 0xE2, 0x04, 0x72, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E,
                0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00,
                0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00,
                0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00,
                0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00,
                0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00,
                0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00,
                0x6D, 0x00, 0x00, 0x00, 0x03, 0x00, 0xFE, 0x0F, 0x94, 0xFC, 0x2B, 0x06, 0x06, 0x00, 0x00, 0x00,
                0x30, 0xB5, 0x3E, 0x07, 0x1F, 0x00, 0x03, 0x30, 0x2A, 0xAE, 0x60, 0x32, 0x5D, 0xF5, 0xE2, 0x04,
                0x3C, 0x31, 0xAC, 0x00, 0x28, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00,
                0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00,
                0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00,
                0x1F, 0x00, 0x02, 0x30, 0x3C, 0x31, 0xAC, 0x00, 0x85, 0xF5, 0xE2, 0x04, 0x7C, 0xFC, 0x2B, 0x06,
                0x0A, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1F, 0x00,
                0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x8F, 0xF5, 0xE2, 0x04, 0xFF, 0xFF, 0x00, 0x00, 0x28, 0x00,
                0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00,
                0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00,
                0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x03, 0x00, 0xFF, 0x5F, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xDE, 0x5F, 0x44, 0x00,
                0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xFD, 0x5F, 0x4D, 0x00,
                0x69, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0xF6, 0x5F, 0x74, 0x00,
                0x20, 0x00, 0xB7, 0xF5, 0xE2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x6A, 0x00,
                0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00,
                0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00,
                0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x02, 0x01, 0xF7, 0x5F, 0x67, 0x00, 0x65, 0x00, 0x72, 0x00,
                0x00, 0x00, 0xDF, 0xF5, 0xE2, 0x04, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x2B,
                0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00,
                0x01, 0x90, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00,
                0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00,
                0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00,
                0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00,
                0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00,
                0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x03, 0x00, 0xDF, 0x5F,
                0x80, 0x19, 0x44, 0x04, 0x00, 0x00, 0x00, 0x00, 0x58, 0xFD, 0x13, 0x00, 0x0B, 0x00, 0x02, 0x60,
                0x90, 0xFD, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x03, 0x60,
                0xD0, 0x9F, 0x33, 0x07, 0x51, 0xF6, 0xE2, 0x04, 0x14, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
                0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00,
                0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00,
                0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x60, 0xC7, 0x44, 0x10, 0x30,
                0x00, 0x40, 0x00, 0x00, 0xEB, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4D, 0xF4, 0x7D,
                0x72, 0xB6, 0xCA, 0x01
            ])
            let file = try NK2File(data: data)
            
            XCTAssertEqual(2, file.rows.count)
            XCTAssertEqual("janesmith@contoso.org", file.rows[0].dropDownDisplayName)
            XCTAssertEqual(0, file.rows[0].recipientOrder!)
            XCTAssertEqual("janesmith@contoso.org", file.rows[0].emailAddress!)
            XCTAssertEqual(0x00000000, file.rows[0].recipientResourceState)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[0].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("janesmith@contoso.org", (file.rows[0].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("janesmith@contoso.org", (file.rows[0].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.primaryRecipient, file.rows[0].recipientType!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x65, 0x00, 0x73, 0x00, 0x6D, 0x00, 0x69, 0x00, 0x74, 0x00, 0x68, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x67, 0x00, 0x00, 0x00], [UInt8](file.rows[0].recordKey!))
            XCTAssertEqual("janesmith@contoso.org", file.rows[0].displayName!)
            XCTAssertEqual(.mailUser, file.rows[0].displayType!)
            XCTAssertNil(file.rows[0].smtpAddress)
            XCTAssertNil(file.rows[0].account)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4A, 0x41, 0x4E, 0x45, 0x53, 0x4D, 0x49, 0x54, 0x48, 0x40, 0x43, 0x4F, 0x4E, 0x54, 0x4F, 0x53, 0x4F, 0x2E, 0x4F, 0x52, 0x47, 0x00], [UInt8](file.rows[0].searchKey!))
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[0].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("janesmith@contoso.org", (file.rows[0].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("janesmith@contoso.org", (file.rows[0].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0x4000, file.rows[0].nickNameWeight)
            XCTAssertEqual("janesmith@contoso.org", file.rows[0].recipientDisplayName!)
            XCTAssertEqual([.sendable], file.rows[0].recipientFlags)
            XCTAssertFalse(file.rows[0].sendRichInfo!)
            XCTAssertEqual("janesmith@contoso.org", file.rows[0].nickName)
            XCTAssertEqual(.mailUser, file.rows[0].objectType!)
            XCTAssertEqual("SMTP", file.rows[0].addressType!)
            XCTAssertEqual(.none, file.rows[0].recipientTrackStatus!)
            XCTAssertFalse(file.rows[0].newNickName!)
            XCTAssertEqual(0, file.rows[0].sendInternetEncoding!)

            XCTAssertEqual(0x00000000, file.rows[1].recipientResourceState)
            XCTAssertEqual("johndoe@contoso.com", file.rows[1].recipientDisplayName!)
            XCTAssertEqual("johndoe@contoso.com", file.rows[1].nickName)
            XCTAssertEqual([.sendable], file.rows[1].recipientFlags)
            XCTAssertEqual(0x00000000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[1].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("johndoe@contoso.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("johndoe@contoso.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertNil(file.rows[1].account)
            XCTAssertEqual(.primaryRecipient, file.rows[1].recipientType!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x6F, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x65, 0x00, 0x40, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[1].recordKey!))
            XCTAssertEqual(0, file.rows[1].sendInternetEncoding!)
            XCTAssertEqual(0x4000, file.rows[1].nickNameWeight)
            XCTAssertFalse(file.rows[1].sendRichInfo!)
            XCTAssertEqual("johndoe@contoso.com", file.rows[1].emailAddress!)
            XCTAssertNil(file.rows[1].smtpAddress)
            XCTAssertEqual(.mailUser, file.rows[1].displayType!)
            XCTAssertEqual(.none, file.rows[1].recipientTrackStatus!)
            XCTAssertEqual(.mailUser, file.rows[1].objectType!)
            XCTAssertEqual("SMTP", file.rows[1].addressType!)
            XCTAssertEqual("johndoe@contoso.com", file.rows[1].displayName!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4A, 0x4F, 0x48, 0x4E, 0x44, 0x4F, 0x45, 0x40, 0x43, 0x4F, 0x4E, 0x54, 0x4F, 0x53, 0x4F, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[1].searchKey!))
            XCTAssertEqual(0, file.rows[1].recipientOrder!)
            XCTAssertFalse(file.rows[1].newNickName!)
            XCTAssertEqual("johndoe@contoso.com", file.rows[1].dropDownDisplayName)
            XCTAssertEqual(0x00000000, (file.rows[1].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode, OneOffEntryFlags(rawValue: 0x1000)], (file.rows[1].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("johndoe@contoso.com", (file.rows[1].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("johndoe@contoso.com", (file.rows[1].entryId as? OneOffEntryID)!.emailAddress)
        }
    }
    
    func testJoachimmetzPlaso() throws {
        do {
            let data = try getData(name: "plaso_Outlook", fileExtension: "NK2")
            let file = try NK2File(data: data)
            
            XCTAssertEqual(5, file.rows.count)
            XCTAssertEqual("nromanoff@stark-research-labs.com", file.rows[0].emailAddress!)
            XCTAssertNil(file.rows[0].smtpAddress)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6E, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x66, 0x00, 0x40, 0x00, 0x73, 0x00, 0x74, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6B, 0x00, 0x2D, 0x00, 0x72, 0x00, 0x65, 0x00, 0x73, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x63, 0x00, 0x68, 0x00, 0x2D, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x62, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x61, 0x00, 0x6E, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x66, 0x00, 0x40, 0x00, 0x73, 0x00, 0x74, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6B, 0x00, 0x2D, 0x00, 0x72, 0x00, 0x65, 0x00, 0x73, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x63, 0x00, 0x68, 0x00, 0x2D, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x62, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[0].recordKey!))
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4E, 0x52, 0x4F, 0x4D, 0x41, 0x4E, 0x4F, 0x46, 0x46, 0x40, 0x53, 0x54, 0x41, 0x52, 0x4B, 0x2D, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x2D, 0x4C, 0x41, 0x42, 0x53, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[0].searchKey!))
            XCTAssertEqual("nromanoff@stark-research-labs.com", file.rows[0].dropDownDisplayName!)
            XCTAssertEqual(0, file.rows[0].recipientOrder!)
            XCTAssertEqual(0x00000000, (file.rows[0].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[0].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("nromanoff@stark-research-labs.com", (file.rows[0].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("nromanoff@stark-research-labs.com", (file.rows[0].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0x00000000, file.rows[0].recipientResourceState!)
            XCTAssertEqual("nromanoff@stark-research-labs.com", file.rows[0].recipientDisplayName!)
            XCTAssertEqual(.primaryRecipient, file.rows[0].recipientType!)
            XCTAssertEqual(.mailUser, file.rows[0].objectType!)
            XCTAssertEqual("nromanoff@stark-research-labs.com", file.rows[0].displayName!)
            XCTAssertTrue(file.rows[0].newNickName!)
            XCTAssertFalse(file.rows[0].sendRichInfo!)
            XCTAssertEqual("nromanoff@stark-research-labs.com", file.rows[0].nickName!)
            XCTAssertEqual([.sendable], file.rows[0].recipientFlags)
            XCTAssertNil(file.rows[0].account)
            XCTAssertEqual("SMTP", file.rows[0].addressType!)
            XCTAssertEqual(0x00006000, file.rows[0].nickNameWeight!)
            XCTAssertEqual(.mailUser, file.rows[0].displayType!)
            XCTAssertEqual(0x00000000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[0].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[0].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[0].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("nromanoff@stark-research-labs.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[0].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("nromanoff@stark-research-labs.com", (file.rows[0].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.none, file.rows[0].recipientTrackStatus!)
            XCTAssertEqual(0, file.rows[0].sendInternetEncoding!)

            XCTAssertEqual("SMTP", file.rows[1].addressType!)
            XCTAssertEqual(.primaryRecipient, file.rows[1].recipientType!)
            XCTAssertEqual("mhill.shield@yahoo.com", file.rows[1].displayName!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4D, 0x48, 0x49, 0x4C, 0x4C, 0x2E, 0x53, 0x48, 0x49, 0x45, 0x4C, 0x44, 0x40, 0x59, 0x41, 0x48, 0x4F, 0x4F, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[1].searchKey!))
            XCTAssertEqual(.mailUser, file.rows[1].displayType!)
            XCTAssertEqual("mhill.shield@yahoo.com", file.rows[1].dropDownDisplayName!)
            XCTAssertEqual([.sendable], file.rows[1].recipientFlags)
            XCTAssertEqual(0, file.rows[1].recipientOrder!)
            XCTAssertTrue(file.rows[1].newNickName!)
            XCTAssertEqual("mhill.shield@yahoo.com", file.rows[1].nickName!)
            XCTAssertEqual(0x00000000, (file.rows[1].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[1].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("mhill.shield@yahoo.com", (file.rows[1].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("mhill.shield@yahoo.com", (file.rows[1].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(.mailUser, file.rows[1].objectType!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6D, 0x00, 0x68, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x73, 0x00, 0x68, 0x00, 0x69, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x64, 0x00, 0x40, 0x00, 0x79, 0x00, 0x61, 0x00, 0x68, 0x00, 0x6F, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6D, 0x00, 0x68, 0x00, 0x69, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x2E, 0x00, 0x73, 0x00, 0x68, 0x00, 0x69, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x64, 0x00, 0x40, 0x00, 0x79, 0x00, 0x61, 0x00, 0x68, 0x00, 0x6F, 0x00, 0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[1].recordKey!))
            XCTAssertEqual("mhill.shield@yahoo.com", file.rows[1].emailAddress!)
            XCTAssertEqual(.none, file.rows[1].recipientTrackStatus!)
            XCTAssertEqual(0, file.rows[1].sendInternetEncoding!)
            XCTAssertEqual("mhill.shield@yahoo.com", file.rows[1].recipientDisplayName!)
            XCTAssertNil(file.rows[1].account)
            XCTAssertEqual(0x00000000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[1].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[1].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[1].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("mhill.shield@yahoo.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[1].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("mhill.shield@yahoo.com", (file.rows[1].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0x00003000, file.rows[1].nickNameWeight!)
            XCTAssertEqual(0x00000000, file.rows[1].recipientResourceState!)
            XCTAssertFalse(file.rows[1].sendRichInfo!)
            XCTAssertNil(file.rows[1].smtpAddress)

            XCTAssertEqual(0, (file.rows[2].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_RECALL) as UInt32?)!)
            XCTAssertEqual("SMTP", file.rows[2].addressType!)
            XCTAssertEqual(0, (file.rows[2].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_RESPONSE) as UInt32?)!)
            XCTAssertEqual(0x00002800, file.rows[2].nickNameWeight!)
            XCTAssertEqual("Timothy Dungan", file.rows[2].displayName!)
            XCTAssertEqual("tdungan@stark-research-labs.com", file.rows[2].nickName!)
            XCTAssertEqual(0x00000000, file.rows[2].recipientResourceState!)
            XCTAssertEqual(0x00000000, (file.rows[2].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[2].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[2].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.unicode], (file.rows[2].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("Timothy Dungan", (file.rows[2].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[2].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("tdungan@stark-research-labs.com", (file.rows[2].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0, (file.rows[2].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_READ) as UInt32?)!)
            XCTAssertEqual("Timothy Dungan", file.rows[2].recipientDisplayName!)
            XCTAssertEqual("Timothy Dungan  <tdungan@stark-research-labs.com>", file.rows[2].dropDownDisplayName!)
            XCTAssertEqual(0x00000000, (file.rows[2].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[2].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[2].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.unicode], (file.rows[2].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("Timothy Dungan", (file.rows[2].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[2].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("tdungan@stark-research-labs.com", (file.rows[2].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual("tdungan@stark-research-labs.com", file.rows[2].emailAddress!)
            XCTAssertTrue(file.rows[2].newNickName!)
            XCTAssertEqual(.none, file.rows[2].recipientTrackStatus!)
            XCTAssertEqual([.sendable], file.rows[2].recipientFlags)
            XCTAssertEqual(1, file.rows[2].recipientOrder!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x54, 0x44, 0x55, 0x4E, 0x47, 0x41, 0x4E, 0x40, 0x53, 0x54, 0x41, 0x52, 0x4B, 0x2D, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x2D, 0x4C, 0x41, 0x42, 0x53, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[2].searchKey!))
            XCTAssertEqual(0, (file.rows[2].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_DELIVERY) as UInt32?)!)
            XCTAssertEqual(.primaryRecipient, file.rows[2].recipientType!)

            XCTAssertEqual(0, file.rows[3].recipientOrder!)
            XCTAssertNil(file.rows[3].account)
            XCTAssertFalse(file.rows[3].sendRichInfo!)
            XCTAssertEqual(.mailUser, file.rows[3].objectType!)
            XCTAssertEqual(.mailUser, file.rows[3].displayType!)
            XCTAssertEqual(.none, file.rows[3].recipientTrackStatus!)
            XCTAssertEqual(0x00000000, file.rows[3].recipientResourceState!)
            XCTAssertEqual("nfury@stark-research-labs.com", file.rows[3].recipientDisplayName!)
            XCTAssertEqual("nfury@stark-research-labs.com", file.rows[3].nickName!)
            XCTAssertTrue(file.rows[3].newNickName!)
            XCTAssertEqual([.sendable], file.rows[3].recipientFlags)
            XCTAssertEqual("nfury@stark-research-labs.com", file.rows[3].dropDownDisplayName!)
            XCTAssertNil(file.rows[3].smtpAddress)
            XCTAssertEqual("nfury@stark-research-labs.com", file.rows[3].displayName!)
            XCTAssertEqual(0x00002200, file.rows[3].nickNameWeight!)
            XCTAssertEqual(.primaryRecipient, file.rows[3].recipientType!)
            XCTAssertEqual("SMTP", file.rows[3].addressType!)
            XCTAssertEqual("nfury@stark-research-labs.com", file.rows[3].emailAddress!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x90, 0x6E, 0x00, 0x66, 0x00, 0x75, 0x00, 0x72, 0x00, 0x79, 0x00, 0x40, 0x00, 0x73, 0x00, 0x74, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6B, 0x00, 0x2D, 0x00, 0x72, 0x00, 0x65, 0x00, 0x73, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x63, 0x00, 0x68, 0x00, 0x2D, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x62, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x66, 0x00, 0x75, 0x00, 0x72, 0x00, 0x79, 0x00, 0x40, 0x00, 0x73, 0x00, 0x74, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6B, 0x00, 0x2D, 0x00, 0x72, 0x00, 0x65, 0x00, 0x73, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x63, 0x00, 0x68, 0x00, 0x2D, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x62, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00], [UInt8](file.rows[3].recordKey!))
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x4E, 0x46, 0x55, 0x52, 0x59, 0x40, 0x53, 0x54, 0x41, 0x52, 0x4B, 0x2D, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x2D, 0x4C, 0x41, 0x42, 0x53, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[3].searchKey!))
            XCTAssertEqual(0x00000000, (file.rows[3].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[3].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[3].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[3].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("nfury@stark-research-labs.com", (file.rows[3].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[3].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("nfury@stark-research-labs.com", (file.rows[3].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual(0, file.rows[3].sendInternetEncoding!)
            XCTAssertEqual(0x00000000, (file.rows[3].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[3].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[3].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[3].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("nfury@stark-research-labs.com", (file.rows[3].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[3].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("nfury@stark-research-labs.com", (file.rows[3].recipientEntryId as? OneOffEntryID)!.emailAddress)

            XCTAssertEqual(0, (file.rows[4].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_RECALL) as UInt32?)!)
            XCTAssertEqual(0x00000000, (file.rows[4].entryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[4].entryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[4].entryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[4].entryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("Gavin Kline", (file.rows[4].entryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[4].entryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("gavinkline@yahoo.com", (file.rows[4].entryId as? OneOffEntryID)!.emailAddress)
            XCTAssertEqual("'Gavin Kline'  <gavinkline@yahoo.com>", file.rows[4].dropDownDisplayName!)
            XCTAssertEqual("gavinkline@yahoo.com", file.rows[4].nickName!)
            XCTAssertEqual(0x00000000, (file.rows[4].recipientEntryId as? OneOffEntryID)!.flags)
            XCTAssertEqual(GUID(0xA41F2B81, 0xA3BE, 0x1910, 0x9D6E, 0x00DD010F5402), (file.rows[4].recipientEntryId as? OneOffEntryID)!.providerUid)
            XCTAssertEqual(0x0000, (file.rows[4].recipientEntryId as? OneOffEntryID)!.version)
            XCTAssertEqual([.noRichInfo, .unicode], (file.rows[4].recipientEntryId as? OneOffEntryID)!.entryFlags)
            XCTAssertEqual("Gavin Kline", (file.rows[4].recipientEntryId as? OneOffEntryID)!.displayName)
            XCTAssertEqual("SMTP", (file.rows[4].recipientEntryId as? OneOffEntryID)!.addressType)
            XCTAssertEqual("gavinkline@yahoo.com", (file.rows[4].recipientEntryId as? OneOffEntryID)!.emailAddress)
            XCTAssertFalse(file.rows[4].newNickName!)
            XCTAssertEqual(0x00000800, file.rows[4].nickNameWeight!)
            XCTAssertEqual(6412, file.rows[4].rowid!)
            XCTAssertNil(file.rows[4].addressBookDisplayNamePrintable)
            XCTAssertEqual("Gavin Kline", file.rows[4].recipientDisplayName!)
            XCTAssertEqual(0, (file.rows[4].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_DELIVERY) as UInt32?)!)
            XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x47, 0x41, 0x56, 0x49, 0x4E, 0x4B, 0x4C, 0x49, 0x4E, 0x45, 0x40, 0x59, 0x41, 0x48, 0x4F, 0x4F, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](file.rows[4].searchKey!))
            XCTAssertEqual(0, (file.rows[4].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_RESPONSE) as UInt32?)!)
            XCTAssertEqual([0x00, 0x00, 0x19, 0x0C], [UInt8](file.rows[4].instanceKey!))
            XCTAssertEqual(0x00000000, file.rows[4].recipientResourceState!)
            XCTAssertEqual(.mailUser, file.rows[4].objectType!)
            XCTAssertEqual("gavinkline@yahoo.com", file.rows[4].emailAddress!)
            XCTAssertEqual(.mailUser, file.rows[4].displayType!)
            XCTAssertEqual(0, file.rows[4].sendInternetEncoding!)
            XCTAssertEqual(.primaryRecipient, file.rows[4].recipientType!)
            XCTAssertEqual([.sendable], file.rows[4].recipientFlags)
            XCTAssertEqual("SMTP", file.rows[4].addressType!)
            XCTAssertFalse(file.rows[4].sendRichInfo!)
            XCTAssertNil(file.rows[4].recordKey)
            XCTAssertEqual(.none, file.rows[4].recipientTrackStatus!)
            XCTAssertFalse(file.rows[4].responsibility!)
            XCTAssertEqual("'Gavin Kline'", file.rows[4].displayName!)
            XCTAssertEqual(0, (file.rows[4].getProperty(id: .PR_RECIPIENT_TRACKSTATUS_READ) as UInt32?)!)
            XCTAssertEqual(1, file.rows[4].recipientOrder!)
        }
    }
    
    static var allTests = [
        ("testSimple", testSimple),
        ("testExample", testExample)
    ]
}
